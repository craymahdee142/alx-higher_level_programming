``4-print_square.txt`` module
============================

Using ``print_square``

Importing the function from module:
	print_square = __import__("4-print_square").print_square
	
Checking for module docstring:
	>>> m = __import__("4-print_square").__doc__
	>>> len(m) > 1
	True

Checking for function docstring:
	>>> f = __import__("4-print_square").__doc__
	>>> len(f) > 1
	True

Checking for no args:
	>>> print_square()
	TracebacK (most recent call last):
	...
	TypeError: print-square() missing 1 required positional arguments: size

Checking for too many args:
	>>> print_square(1, 3)
	Traceback (most recent call last):
	TypeError: print-square() takes 1 positioanl argument but 2 were given

Checking for passing none:
	>>> print_square(None)
	Traceback (most recent call last):
	...
	TypeError: size mus be an integer

Checking for positive int:
	>>> print-square(4)
	####
	####
	####
	####
	>>> print-square(8)
	########
	########
	########
	########
	########
	########
	########
	########
	>>> print-square(1)
	#
	>>> print-sqauer(0)
	
Checking for negative int:
	>>> print-square((1,))
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

Checking for non-number types:
        >>> print-square("4")
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
	 >>> print-square("False")
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer

Checking for non-int number types:
        >>> print-square("4.0")
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
         >>> print-square("-4.4")
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer
-- INSERT --                                                                                                              69,27         Bot
